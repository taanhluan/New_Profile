{"ast":null,"code":"var _jsxFileName = \"/workspaces/huppo/personal-portfolio/src/ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ThemeContext.tsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  theme: 'pinkOrange',\n  setTheme: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('pinkOrange');\n  useEffect(() => {\n    const body = document.body;\n    // Xóa tất cả các class theme trước đó\n    body.classList.remove('theme-pinkOrange', 'theme-purplePink', 'theme-yellowPurple');\n    // Thêm class theme mới\n    body.classList.add(`theme-${theme}`);\n\n    // Cleanup khi component unmount hoặc theme thay đổi\n    return () => {\n      body.classList.remove(`theme-${theme}`);\n    };\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"PAzPkJmLThDZeILLxiGsMAbRusU=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","theme","setTheme","ThemeProvider","children","_s","body","document","classList","remove","add","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["/workspaces/huppo/personal-portfolio/src/ThemeContext.tsx"],"sourcesContent":["// ThemeContext.tsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\ntype ThemeType = 'pinkOrange' | 'purplePink' | 'yellowPurple';\n\nconst ThemeContext = createContext<{\n  theme: ThemeType;\n  setTheme: (t: ThemeType) => void;\n}>({ theme: 'pinkOrange', setTheme: () => {} });\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [theme, setTheme] = useState<ThemeType>('pinkOrange');\n\n  useEffect(() => {\n    const body = document.body;\n    // Xóa tất cả các class theme trước đó\n    body.classList.remove('theme-pinkOrange', 'theme-purplePink', 'theme-yellowPurple');\n    // Thêm class theme mới\n    body.classList.add(`theme-${theme}`);\n\n    // Cleanup khi component unmount hoặc theme thay đổi\n    return () => {\n      body.classList.remove(`theme-${theme}`);\n    };\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9E,MAAMC,YAAY,gBAAGN,aAAa,CAG/B;EAAEO,KAAK,EAAE,YAAY;EAAEC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAE/C,OAAO,MAAMC,aAAsD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtF,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAY,YAAY,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,MAAMS,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1B;IACAA,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,oBAAoB,CAAC;IACnF;IACAH,IAAI,CAACE,SAAS,CAACE,GAAG,CAAC,SAAST,KAAK,EAAE,CAAC;;IAEpC;IACA,OAAO,MAAM;MACXK,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,SAASR,KAAK,EAAE,CAAC;IACzC,CAAC;EACH,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA,CAACC,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC;IAAS,CAAE;IAAAE,QAAA,EAC/CA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACX,EAAA,CArBWF,aAAsD;AAAAc,EAAA,GAAtDd,aAAsD;AAuBnE,OAAO,MAAMe,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACK,YAAY,CAAC;AAAA;AAACmB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}